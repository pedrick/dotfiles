# install_command:=sudo apt-get install -y
install_command:=sudo pacman -S --noconfirm --needed
yay_install_command:=yay -S --noconfirm --needed

.PHONY: help
help:
	@echo "Available Commands\n------------------"
	@make -qp | awk -F':' '/^[a-zA-Z0-9][^$$#\/\t=]*:([^=]|$$)/ {split($$1,A,/ /);for(i in A)print A[i]}' | grep -v Makefile

.PHONY: aur-packages
aur-packages: core-packages
# Install yay
	rm -fr /tmp/yay && cd /tmp && git clone https://aur.archlinux.org/yay.git
	cd /tmp/yay && makepkg -si --noconfirm
# Install AUR packages
	$(yay_install_command) pacmixer slack-desktop teams ttf-ms-fonts ttf-font-awesome zoom
	$(yay_install_command) laptop-mode-tools

.PHONY: core-packages
core-packages:
	$(install_command) base-devel man-db man-pages ntp reflector
# Configure reflector to update the package list
	sudo systemctl enable reflector.timer
	sudo systemctl start reflector.timer

.PHONY: editors
editors:
	$(install_command) vim emacs

.PHONY: gnome
gnome:
	$(install_command) gnome

.PHONY: gpg-settings
gpg-settings:
	gsettings set org.gnome.crypto.cache gpg-cache-method 'idle'
	gsettings set org.gnome.crypto.cache gpg-cache-ttl 300

.PHONY: gui-windows
gui-windows:
	$(install_command) flameshot fuzzel gdm grim i3status mako \
	sway swaybg swayidle swaylock \
	wl-clipboard swayidle wtype xdg-desktop-portal xdg-desktop-portal-wlr
	$(yay_install_command) tessen
	sudo systemctl enable gdm.service

home_dir=$(echo ~)
current_dir=$(pwd)
.PHONY: install
install:
ifneq ($(current_dir),$(home_dir))
	rsync --exclude ".git/" --exclude "Makefile" -av . ~
endif

.PHONY: lint-js
lint-js:
	$(install_command) nodejs npm
	sudo npm install -g babel-eslint
	sudo npm install -g eslint@4
	sudo npm install -g jshint
	sudo npm install -g tslint

.PHONY: networking
networking:
	$(install_command) iw iwd
	sudo systemctl enable systemd-networkd
	sudo systemctl start systemd-networkd
	sudo systemctl enable systemd-resolved
	sudo systemctl start systemd-resolved
	sudo systemctl enable iwd
	sudo systemctl start iwd
# Setup .local name resolution using Avahi.
# See https://wiki.archlinux.org/title/Avahi#Hostname_resolution
	$(install_command) nss-mdns
	@echo "$(tput bold)Add 'mdns_minimal [NOTFOUND=return]' to the hosts line in /etc/nsswitch.conf"
	@echo "$(tput bold)See https://wiki.archlinux.org/title/Avahi#Hostname_resolution"

.PHONY: openvpn
openvpn:
	$(install_command) openvpn networkmanager-openvpn

.PHONY: printing
printing:
	$(install_command) avahi cups hplip nss-mdns
	sudo systemctl enable avahi-daemon.service
	sudo systemctl enable org.cups.cupsd.service

.PHONY: python-packages
python-packages: tools
	sudo pip install diff-highlight flake8 gprof2dot ipython ipdb

.PHONY: submodules
submodules:
	git submodule init
	git submodule update

.PHONY: tools
tools:
# General tools
	$(install_command) alacritty aspell-en bind-tools curl \
	dool graphviz htop iftop iotop python-pip rsync shellcheck tlp tmux \
	tree whois
# LSP servers
	$(install_command) pyright typescript-language-server
	sudo systemctl enable tlp.service
	sudo systemctl start tlp.service

.PHONY: upgrade-packages
upgrade-packages:
	yay -Syu

# Use virtualbox-host-modules-dkms with the linux-lts kernel, use
# virtualbox-host-modules-arch with the normal linux kernel
.PHONY: virtualbox
virtualbox:
	$(install_command) virtualbox virtualbox-guest-iso virtualbox-host-modules-arch

.PHONY: zsh
zsh:
	$(install_command) atuin zsh
	chsh -s `which zsh`

.PHONY: all
all: aur-packages core-packages lightdm gnome gpg-settings install editors tools lint-js \
    networking printing python-packages zsh
