# install_command:=sudo apt-get install -y
install_command:=sudo pacman -S --noconfirm --needed
yay_install_command:=yay -S --noconfirm --needed

package_dir:=~/packages
icu_63_package:=icu-63.1-2-x86_64.pkg.tar.xz

.PHONY: help
help:
	@echo "Available Commands\n------------------"
	@make -qp | awk -F':' '/^[a-zA-Z0-9][^$$#\/\t=]*:([^=]|$$)/ {split($$1,A,/ /);for(i in A)print A[i]}' | grep -v Makefile

.PHONY: aur-packages
aur-packages: core-packages
# Install yay
	rm -fr /tmp/yay && cd /tmp && git clone https://aur.archlinux.org/yay.git
	cd /tmp/yay && makepkg -si --noconfirm
# Install AUR packages
	$(yay_install_command) pacmixer slack-desktop teams ttf-ms-fonts zoom

.PHONY: core-packages
core-packages:
	$(install_command) base-devel man-db man-pages ntp

.PHONY: cuda
cuda:
	$(install_command) bbswitch-dkms bumblebee cuda cudnn linux-lts-headers nvidia nvidia-lts nvidia-libgl nvidia-settings opencl-nvidia xf86-video-intel
	sudo gpasswd -a $(shell whoami) bumblebee
	sudo systemctl enable bumblebeed.service
	echo '\033[0;31mTODO: Enable Nvidia card during shutdown. See: https://wiki.archlinux.org/index.php/Bumblebee#Enable_NVIDIA_card_during_shutdown'

.PHONY: editors
editors:
	$(install_command) vim emacs

.PHONY: gnome
gnome:
	$(install_command) gnome

.PHONY: gpg-settings
gpg-settings:
	gsettings set org.gnome.crypto.cache gpg-cache-method 'idle'
	gsettings set org.gnome.crypto.cache gpg-cache-ttl 300

icu_extract_dir:=/tmp/icu.63
.PHONY: icu.63
icu.63:
	mkdir $(icu_extract_dir)
	cd $(icu_extract_dir) && tar -xf $(package_dir)/$(icu_63_package)
	sudo cp $(icu_extract_dir)/usr/lib/libicu*.63.1 /usr/lib
	rm -r $(icu_extract_dir)

home_dir=$(echo ~)
current_dir=$(pwd)
.PHONY: install
install:
ifneq ($(current_dir),$(home_dir))
	rsync --exclude ".git/" --exclude "Makefile" -av . ~
endif

.PHONY: lint-js
lint-js:
	$(install_command) nodejs npm
	sudo npm install -g babel-eslint
	sudo npm install -g eslint@4
	sudo npm install -g jshint
	sudo npm install -g tslint

ldm-gtk-greeter-conf=/etc/lightdm/lightdm-gtk-greeter.conf

.PHONY: lightdm
lightdm:
	$(install_command) lightdm lightdm-gtk-greeter
	sudo systemctl enable lightdm.service
ifeq ($(shell test -f $(ldm-gtk-greeter-conf).bak; echo $$?), 1)
	sudo cp $(ldm-gtk-greeter-conf) $(ldm-gtk-greeter-conf).bak
endif
	sudo cp ~/conf/lightdm-gtk-greeter.conf /etc/lightdm/lightdm-gtk-greeter.conf

.PHONY: networking
networking:
	$(install_command) iw iwd
	sudo systemctl enable systemd-networkd
	sudo systemctl start systemd-networkd
	sudo systemctl enable systemd-resolved
	sudo systemctl start systemd-resolved
	sudo systemctl enable iwd
	sudo systemctl start iwd

.PHONY: openvpn
openvpn:
	$(install_command) openvpn networkmanager-openvpn

.PHONY: postgresql
postgresql: icu.63
	sudo pacman -U --noconfirm https://archive.archlinux.org/packages/p/postgresql/postgresql-10.5-3-x86_64.pkg.tar.xz https://archive.archlinux.org/packages/p/postgresql-libs/postgresql-libs-10.5-3-x86_64.pkg.tar.xz
	@-cd /usr/lib && sudo ln -s libreadline.so.8 libreadline.so.7

.PHONY: printing
printing:
	$(install_command) avahi cups hplip nss-mdns
	sudo systemctl enable avahi-daemon.service
	sudo systemctl enable org.cups.cupsd.service

.PHONY: python-packages
python-packages: tools
	sudo pip install diff-highlight flake8 gprof2dot ipython ipdb

.PHONY: swap-caps
swap-caps:
	sudo cp ~/conf/etc/xorg.conf.d/00-keyboard.conf /etc/X11/xorg.conf.d/00-keyboard.conf

.PHONY: submodules
	git submodule init
	git submodule update

.PHONY: tools
tools:
	$(install_command) arandr bind-tools curl dstat graphviz htop iftop iotop python-pip rsync tmux tree terminator whois xclip

# Note: Generally I should use upgrade-all. That installs the correct version of
# postgresql after pacman gets too new a version.
.PHONY: upgrade-packages
upgrade-packages:
	yay -Syu
# This seems necessary every once in a while
	sudo ghc-pkg recache
# Needed to make sure we can log in the next time
	xmonad --recompile

.PHONY: upgrade-all
upgrade-all: upgrade-packages postgresql

# Use virtualbox-host-modules-dkms with the linux-lts kernel, use
# virtualbox-host-modules-arch with the normal linux kernel
.PHONY: virtualbox
virtualbox:
	$(install_command) virtualbox virtualbox-guest-iso virtualbox-host-modules-arch

.PHONY: xmobar
xmobar:
	$(install_command) xmobar

.PHONY: xmonad-base
xmonad-base:
	$(install_command) xmonad xmonad-contrib xautolock rofi rofi-pass notify-osd stalonetray

.PHONY: xmonad
xmonad: xmonad-base xmobar

.PHONY: xorg
xorg:
	$(install_command) xf86-input-synaptics

.PHONY: zsh
zsh:
	$(install_command) zsh
	chsh -s `which zsh`

.PHONY: all
all: aur-packages core-packages lightdm gnome gpg-settings install editors tools lint-js \
    networking printing python-packages xmonad xorg zsh swap-caps
